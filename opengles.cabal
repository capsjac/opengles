name:                opengles
version:             0.8.0
synopsis:            A simplified interface for OpenGL 4.1+, OpenGL ES 2.0+ and EGL 1.4+
description:         A functional OpenGL[ES] wrapper library.
                     Please check out simple texture rendering example in just 100 lines.
                     This library is intended use on mobile, however,
                     also works in OpenGL 4.1/4.3+ environment on desktop.
license:             LGPL-3
license-file:        LICENSE
author:              capsjac <capsjac at gmail dot com>
maintainer:          capsjac <capsjac at gmail dot com>
copyright:           (c) 2014 capsjac
category:            Graphics
build-type:          Simple
extra-source-files:
  include/EGL/egl.h
  include/EGL/eglext.h
  include/EGL/eglplatform.h
  include/KHR/khrplatform.h
  examples/billboard.hs
  examples/billboard2.hs
  examples/glsl-sandbox-player.hs
  examples/windmill.hs
  examples/windows.hs
extra-doc-files: ANGLE/LICENSE
data-files:
  ANGLE/Win32/libGLESv2.dll
  ANGLE/Win32/libEGL.dll
  ANGLE/Win64/libGLESv2.dll
  ANGLE/Win64/libEGL.dll
stability: experimental
cabal-version:       >= 1.18

source-repository head
  type:              git
  location:          https://github.com/capsjac/opengles

flag PlatformOwnAPIs
  description:
    Use the native libraries instead of EGL. e.g. WGL, GLX, dlsym.
  default: False

flag StaticLinkES3
  description:
    If used, OpenGL ES 3.0 functions are static linked.
    You may experience runtime link error depending on devices.
  default: False

flag StaticLinkEGL15
  description:
    If used, EGL 1.5 functions are static linked.
    You may experience runtime link error depending on devices.
  default: False
  
flag BuildExample
  default: False

library
  default-language: Haskell2010

  exposed-modules:
    Graphics.EGL,
    Graphics.EGL.Base,
    Graphics.OpenGL.CoreArb,
    Graphics.OpenGL.Types,
    Graphics.OpenGLES,
    Graphics.OpenGLES.Base,
    Graphics.OpenGLES.Base.Proc,
    Graphics.OpenGLES.Buffer,
    Graphics.OpenGLES.Caps,
    Graphics.OpenGLES.Core,
    Graphics.OpenGLES.Framebuffer,
    Graphics.OpenGLES.Internal,
    Graphics.OpenGLES.PixelFormat,
    Graphics.OpenGLES.State,
    Graphics.OpenGLES.Sync,
    Graphics.OpenGLES.Texture,
    Graphics.OpenGLES.Types,
    Graphics.TextureContainer.KTX,
    Graphics.TextureContainer.PKM,
    Linear.Graphics
  
  other-extensions: ForeignFunctionInterface
  
  build-depends:
      base >= 4.7 && < 5
    , bytestring >= 0.10 && < 1
    , distributive >= 0.4 && < 0.5
    , fixed >= 0.2.1 && < 0.3
    , future-resource >= 0.3
    , half >= 0.2 && < 0.3
    , ghc-prim
    , linear >= 1.15 && < 2
    , lens >= 4.6 && < 4.10
    , packer >= 0.1 && < 0.2
    , vector >= 0.10 && < 0.12
  
  include-dirs: include
  ghc-options: -Wall -fexcess-precision  -funbox-strict-fields
  
  if os(android) || (os(linux) && !flag(PlatformOwnAPIs))
    cpp-options: -DSTATIC_ES2 -DEGL_GETPROC
    if flag(StaticLinkES3)
      cpp-options: -DSTATIC_ES3
    extra-libraries: EGL, GLESv2
  
  if os(linux) && flag(PlatformOwnAPIs)
    -- GLX 1.3 provides glXGetProcAddressARB
    -- GLX 1.4 provides glXGetProcAddress
    cpp-options: -DSTATIC_ES2 -DGLX_GETPROC
    if flag(StaticLinkES3)
      -- XXX untested
      cpp-options: -DSTATIC_ES3
    extra-libraries: GL
  
  if os(ios)
    cpp-options: -DSTATIC_ES2 -DSTATIC_ES3 -DNOEGL -DDLSYM_GETPROC
    frameworks: QuartzCore, OpenGLES
  
  if os(darwin)
    cpp-options: -DSTATIC_ES2 -DSTATIC_ES3 -DNOEGL -DGLX_GETPROC
    frameworks: OpenGL
  
  if os(windows)
    if flag(PlatformOwnAPIs)
      cpp-options: -DNOEGL -DWGL_GETPROC
      extra-libraries: opengl32
    else
      cpp-options: -DEGL_GETPROC -DSTATIC_ES2 -DSTATIC_ES3
      -- Static_ES{2,3} is needed because ANGLE does not provide
      -- dynamic access to GLES functions other than extensions
      -- via eglGetProcAddress
      extra-libraries: libEGL libGLESv2
      -- Tip: put 32/64bit dlls on %Path%, like Roaming/cabal/bin
      -- Hint: cabal get opengles && cabal install C:\path\to\opengles\ANGLE\Win64
  
  if flag(StaticLinkEGL15)
    cpp-options: -DSTATIC_EGL15

executable windmill
  ghc-options: -threaded -DEGL_GETPROC -DSTATIC_ES2 -DSTATIC_ES3
  extra-libraries: EGL GLESv2
  main-is: examples/windmill.hs
  if flag(BuildExample)
    buildable: True
  else
    buildable: False
  build-depends: base == 4.*, lens == 4.*, opengles, linear, random, GLFW-b, time, bytestring, distributive, ghc-prim, packer, vector, future-resource
  default-language:    Haskell2010

